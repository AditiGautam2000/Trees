/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    HashSet<Integer> hs=new HashSet<Integer>();
    public int findSecondMinimumValue(TreeNode root) {
        
        inorder(root,hs);
        if(hs.size()==1)
            return -1;
        List <Integer> l =new ArrayList<Integer>(hs);
        Collections.sort(l);
        return l.get(1);
        
    }
    public void inorder(TreeNode root,HashSet<Integer> hs)
    {   if(root==null )
            return;
            
            inorder(root.left,hs);
        hs.add(root.val);
            inorder(root.right,hs);
      
    }
} 
https://leetcode.com/submissions/detail/593016358/
