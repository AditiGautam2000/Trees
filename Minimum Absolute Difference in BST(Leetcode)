/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeNode prev=null;
    int min=Integer.MAX_VALUE;
    TreeNode pre=null;
    public int getMinimumDifference(TreeNode root) {
        
        if(root==null) return 0;
        
        if(root.left!=null)
            getMinimumDifference(root.left);
        if(pre!=null) min=Math.min(min,Math.abs(root.val-pre.val));
        pre=root;
        if(root.right!=null)
            getMinimumDifference(root.right);
        
        
        return min;
      
    }
}
https://leetcode.com/tag/binary-search-tree/
https://leetcode.com/problems/minimum-absolute-difference-in-bst/submissions/
